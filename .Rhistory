R.home()
help("Startup")
usethis::edit_r_environ()
shiny::runApp()
shiny::runApp()
shiny::runApp()
EBIRD_KEY = 'plu0uejrs3vn'
saveRDS(EBIRD_KEY, "EBIRD_KEY")
load(EBIRD_KEY.rds)
readRDS(EBIRD_KEY.rds)
saveRDS(EBIRD_KEY, "EBIRD_KEY.rds")
EBIRD_KEY = 'plu0uejrs3vn'
saveRDS(EBIRD_KEY, "EBIRD_KEY.rds")
readRDS(EBIRD_KEY.rds)
readRDS('EBIRD_KEY.rds')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rebird)
library(leaflet)
library(leaflet.minicharts)
library(sf)
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthhires)
library(lubridate)
library(plotly)
library(rvest)
EBIRD_KEY <- readRDS('EBIRD_KEY.rds')
# Get species code
species_code('hydroprogne caspia')
cali <- ebirdregion(loc = 'US-CA', key = EBIRD_KEY, back = 30)
# Get observations in past 30 days in California
cate <- ebirdregion(loc = 'US-CA', species = 'caster1', key = EBIRD_KEY, back = 30)
notable <- rebird::ebirdnotable(lat = 36.96, lng = -122.01, dist = 15,
key = EBIRD_KEY)
# Map observations
leaflet(data = cate) %>%
addProviderTiles(providers$CartoDB.DarkMatter, group = "Dark") %>%
addProviderTiles(providers$Stamen.TerrainBackground, group = "Terrain") %>%
addCircleMarkers(~lng, ~lat,
popup = ~as.character(locName),
label = ~as.character(locName),
radius = 1) %>%
addMiniMap(tiles = providers$CartoDB.DarkMatter) %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addLayersControl(
baseGroups = c("Dark", "Terrain"),
options = layersControlOptions(collapsed = FALSE)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}")
# Map observations
leaflet(data = cate) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addCircleMarkers(~lng, ~lat,
popup = ~as.character(locName),
label = ~as.character(locName),
radius = 1) %>%
addMiniMap(tiles = providers$CartoDB.DarkMatter) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}")
# Map observations
leaflet(data = cate) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addCircleMarkers(~lng, ~lat,
popup = ~as.character(locName),
label = ~as.character(locName),
radius = 1) %>%
addMiniMap(tiles = providers$CartoDB.DarkMatter)
# convert ebd to spatial object
cate_sf <- cate %>%
select(comName, lat, lng) %>%
st_as_sf(coords = c("lng", "lat"), crs = 26910)
# get state boundaries using rnaturalearth package
states <- ne_states(iso_a2 = c("US", "CA"), returnclass = "sf")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
install_github("ropensci/rnaturalearthhires")
# get state boundaries using rnaturalearth package
states <- ne_states(iso_a2 = c("US", "CA"), returnclass = "sf")
devtools::install_github("ropensci/rnaturalearthhires")
library(rebird)
library(leaflet)
library(leaflet.minicharts)
library(sf)
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthhires)
library(lubridate)
library(plotly)
library(rvest)
EBIRD_KEY <- readRDS('EBIRD_KEY.rds')
# Get species code
species_code('hydroprogne caspia')
cali <- ebirdregion(loc = 'US-CA', key = EBIRD_KEY, back = 30)
# Get observations in past 30 days in California
cate <- ebirdregion(loc = 'US-CA', species = 'caster1', key = EBIRD_KEY, back = 30)
notable <- rebird::ebirdnotable(lat = 36.96, lng = -122.01, dist = 15,
key = EBIRD_KEY)
# Map observations
leaflet(data = cate) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addCircleMarkers(~lng, ~lat,
popup = ~as.character(locName),
label = ~as.character(locName),
radius = 1) %>%
addMiniMap(tiles = providers$CartoDB.DarkMatter)
# convert ebd to spatial object
cate_sf <- cate %>%
select(comName, lat, lng) %>%
st_as_sf(coords = c("lng", "lat"), crs = 26910)
# get state boundaries using rnaturalearth package
states <- ne_states(iso_a2 = c("US", "CA"), returnclass = "sf")
install.packages('rgeos')
# get state boundaries using rnaturalearth package
states <- ne_states(iso_a2 = c("US", "CA"), returnclass = "sf")
ca <- filter(states, postal == "CA") %>%
st_geometry()
# map
par(mar = c(0, 0, 0, 0), bg = "skyblue")
# set plot extent
plot(ca, col = NA)
# add state boundaries
plot(states %>% st_geometry(), col = "grey40", border = "white", add = TRUE)
plot(ca, col = "grey20", border = "white", add = TRUE)
# ebird data
plot(cate_sf, col = "#4daf4a99", pch = 19, cex = 0.75, add = TRUE)
# Get list of taxonomy common names, scientific names, species code
taxonomy <- ebirdtaxonomy(key = EBIRD_KEY)
